const faker = require('faker');

const ethnicities = [
  'american_indian/alaska_native',
  'asian',
  'black/african_american',
  'hawiian/pacific_islander',
  'white',
];

const getRand = (max) => {
  return Math.floor(Math.random() * max) + 1;
};

// Had to hard code due to service_entries seeds needing non-random id's

const recipients = [
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
  {
    name: faker.name.findName(),
    age: Number(getRand(121)),
    ethnicity: ethnicities[getRand(5) - 1],
    address: faker.fake(`{{address.streetAddress}}`),
    city: faker.fake(`{{address.city}}`),
    state: faker.fake(`{{address.stateAbbr}}`),
    zip_code: faker.fake(`{{address.zipCode}}`),
    veteran_status: faker.random.boolean(),
    household_size: Number(getRand(15)),
  },
];

exports.seed = function (knex) {
  return knex('recipients').insert(recipients);
};
